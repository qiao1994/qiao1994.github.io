<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法 - 标签 - 满地可</title>
        <link>https://qiao1994.github.io/tags/%E7%AE%97%E6%B3%95/</link>
        <description>算法 - 标签 - 满地可</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 04 Jul 2019 20:28:00 &#43;0000</lastBuildDate><atom:link href="https://qiao1994.github.io/tags/%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>合并多个链表</title>
    <link>https://qiao1994.github.io/10-merge-k-sorted-lists/</link>
    <pubDate>Thu, 04 Jul 2019 20:28:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/10-merge-k-sorted-lists/</guid>
    <description><![CDATA[思路 把所有链表的头节点，建立一个最小堆，逐个从堆中拿下最小的节点，并用链表的后续节点补充 分治，分别两两合并 问题 分治和遍历的差别是：每次分治处]]></description>
</item><item>
    <title>判断链表是否有环</title>
    <link>https://qiao1994.github.io/9-linked-list-cycle/</link>
    <pubDate>Thu, 04 Jul 2019 19:13:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/9-linked-list-cycle/</guid>
    <description><![CDATA[思路 使用快慢两个指针，如果两个指针相遇，则链表有环；如果快指针先走到链表尾，则链表无环 问题 判等操作应该在指针迁移一次后再做，否则所有都会被判]]></description>
</item><item>
    <title>寻找第一个缺失的正数</title>
    <link>https://qiao1994.github.io/8-first-missing-positive/</link>
    <pubDate>Wed, 03 Jul 2019 21:35:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/8-first-missing-positive/</guid>
    <description><![CDATA[思路 思路一：排序，然而不能满足空间复杂度的要求 思路二：把每个位置的有效num，与num-1位置的元素交换，然后遍历处理后的数组，第一个元素值]]></description>
</item><item>
    <title>求大多数</title>
    <link>https://qiao1994.github.io/7-majority-element/</link>
    <pubDate>Wed, 03 Jul 2019 20:29:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/7-majority-element/</guid>
    <description><![CDATA[思路 思路一：使用一个hash表，统计每个元素出现的次数 思路二：用一个变量result暂存当前的数字，遇到一个数字如果是result，就给co]]></description>
</item><item>
    <title>3 sum</title>
    <link>https://qiao1994.github.io/6-3-sum/</link>
    <pubDate>Wed, 03 Jul 2019 19:29:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/6-3-sum/</guid>
    <description><![CDATA[思路 2 sum的三种解法 暴力两重循环 O(n^2) map+一重循环 O(n) + O(n) 排序+一重循环 O(nlogn) 3 sum的三种解法 暴力三重循环 O(n^3) map+两重循环 O(n) + O(n^2) 排序+两重循]]></description>
</item><item>
    <title>求链表的中间节点</title>
    <link>https://qiao1994.github.io/5-%E6%B1%82%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9/</link>
    <pubDate>Sat, 29 Jun 2019 18:29:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/5-%E6%B1%82%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9/</guid>
    <description><![CDATA[一下能想到的是暴力解法，先遍历链表获取链表节点总数，然后求出中点的索引值，这样的时间复杂度是O(n)； 稍微优化一下的话就是使用经典的快慢节点]]></description>
</item><item>
    <title>合并两个有序链表</title>
    <link>https://qiao1994.github.io/4-%E5%90%88%E5%B9%B6%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Sat, 29 Jun 2019 17:30:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/4-%E5%90%88%E5%B9%B6%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[递归 补：2019-07-04发现了屌炸天的递归算法，补上它 理解这个递归的核心是，该函数每次都会返回剩余元素中最小的一个；或者一个链表已空，则]]></description>
</item><item>
    <title>单链表反转</title>
    <link>https://qiao1994.github.io/3-%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC/</link>
    <pubDate>Sat, 29 Jun 2019 16:09:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/3-%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC/</guid>
    <description><![CDATA[递归反转链表的基本思路是先用递归深入到最后一个节点，把最后一个节点传递返回，作为新的头节点；跳出递归的过程中把每个节点的后一个节点指向自身，]]></description>
</item><item>
    <title>合并两个有序数组</title>
    <link>https://qiao1994.github.io/2-%E5%90%88%E5%B9%B6%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link>
    <pubDate>Sat, 29 Jun 2019 15:40:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/2-%E5%90%88%E5%B9%B6%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid>
    <description><![CDATA[如果有的选，选一个小的；如果没的选，把另外一个遍历完。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package main import &#34;fmt&#34; //合]]></description>
</item><item>
    <title>动态数组</title>
    <link>https://qiao1994.github.io/1-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</link>
    <pubDate>Sat, 29 Jun 2019 14:56:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/1-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</guid>
    <description><![CDATA[这里实现了一个能够动态扩容和缩容的数组，动态数组的核心在于扩容和缩容策略，这里采用的策略如下 扩容：当数组满了以后，把容量扩充为原来的两倍 缩容]]></description>
</item></channel>
</rss>
