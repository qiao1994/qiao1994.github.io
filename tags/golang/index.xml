<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Golang - 标签 - 满地可的笔记本</title>
        <link>https://qiao1994.github.io/tags/golang/</link>
        <description>Golang - 标签 - 满地可的笔记本</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 07 May 2019 14:10:00 &#43;0000</lastBuildDate><atom:link href="https://qiao1994.github.io/tags/golang/" rel="self" type="application/rss+xml" /><item>
    <title>7.接口</title>
    <link>https://qiao1994.github.io/7-%E6%8E%A5%E5%8F%A3/</link>
    <pubDate>Tue, 07 May 2019 14:10:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/7-%E6%8E%A5%E5%8F%A3/</guid>
    <description><![CDATA[接口的基本性质 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package main import &#34;fmt&#34; //定义一个接口Pet，接口里的内]]></description>
</item><item>
    <title>8.goroutine</title>
    <link>https://qiao1994.github.io/8-goroutine/</link>
    <pubDate>Tue, 07 May 2019 14:10:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/8-goroutine/</guid>
    <description><![CDATA[goroutine goroutine是用户级线程，它的优势在于开销低、灵活(因为完全由用户自己控制，不需要等待系统调度)；劣势在于复杂，因为整个过程需要用户]]></description>
</item><item>
    <title>6.结构体</title>
    <link>https://qiao1994.github.io/6-%E7%BB%93%E6%9E%84%E4%BD%93/</link>
    <pubDate>Tue, 07 May 2019 14:07:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/6-%E7%BB%93%E6%9E%84%E4%BD%93/</guid>
    <description><![CDATA[结构体用”组合“的方式实现了类似其他语言中的”继承“ 这里和其他语言的继承很相似，所以不再记录 值方法和指针方法 不同点 传入内容 值方法的接收者是该]]></description>
</item><item>
    <title>5.函数</title>
    <link>https://qiao1994.github.io/5-%E5%87%BD%E6%95%B0/</link>
    <pubDate>Tue, 23 Apr 2019 09:53:31 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/5-%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[函数是“一等公民” 函数不但可以用于封装代码、分割功能、解耦逻辑，还可以化身为普通的值，在其他函数间传递、赋予变量、做类型判断和转换等等，就像]]></description>
</item><item>
    <title>4.链表</title>
    <link>https://qiao1994.github.io/4-%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 23 Apr 2019 09:33:50 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/4-%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[链表container/list 实体：List（双向链表）、Element(链表中元素的结构) 方法们 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func (l *List) MoveBefore(e, mark *Element)]]></description>
</item><item>
    <title>3.通道</title>
    <link>https://qiao1994.github.io/3-%E9%80%9A%E9%81%93/</link>
    <pubDate>Tue, 23 Apr 2019 09:33:31 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/3-%E9%80%9A%E9%81%93/</guid>
    <description><![CDATA[Don’t communicate by sharing memory; share memory by communicating. （不要通过共享内存来通信，而应该通过通信来共享内存。） 通道是Go语言中唯一一个可以满足并发安全的类型 通道的容量如果]]></description>
</item><item>
    <title>2.字典</title>
    <link>https://qiao1994.github.io/2-%E5%AD%97%E5%85%B8/</link>
    <pubDate>Tue, 23 Apr 2019 09:31:32 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/2-%E5%AD%97%E5%85%B8/</guid>
    <description><![CDATA[map是一个哈希表的特定实现，是引用类型 map的键的类型是收到约束的，一定要是可判等的 因为map会先求键的哈希，哈希可能存在冲突，对比完哈希]]></description>
</item><item>
    <title>1.数组和切片</title>
    <link>https://qiao1994.github.io/1-%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%87%E7%89%87/</link>
    <pubDate>Tue, 23 Apr 2019 09:30:31 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/1-%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%87%E7%89%87/</guid>
    <description><![CDATA[切片是变长的，数组是定长的 切片是引用类型，数组是值类型 每个切片都有一个底层数组 切片可以认为是一个变长的窗口，可以透过这个窗口访问底层数组的内]]></description>
</item><item>
    <title>Golang基本用法</title>
    <link>https://qiao1994.github.io/golang-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
    <pubDate>Thu, 21 Mar 2019 21:30:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/golang-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[本文为2019春节期间用golang刷LeetCode时遇到的基础使用方式，备注一下，后续可直接复制取用。 array 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]]></description>
</item></channel>
</rss>
