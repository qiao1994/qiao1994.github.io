<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法学习笔记 - 分类 - 满地可的笔记本</title>
        <link>https://qiao1994.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
        <description>算法学习笔记 - 分类 - 满地可的笔记本</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 31 Dec 2018 15:06:00 &#43;0000</lastBuildDate><atom:link href="https://qiao1994.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" rel="self" type="application/rss+xml" /><item>
    <title>算法:字符串匹配</title>
    <link>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/</link>
    <pubDate>Mon, 31 Dec 2018 15:06:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/</guid>
    <description><![CDATA[BF算法 暴力匹配 代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 &lt;?php /** * 暴力匹配 * @param string $main 主串 * @param string $pattern 模式串 * @return mixed integer/boolean */ function bf($main, $pattern)]]></description>
</item><item>
    <title>算法:图</title>
    <link>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%9B%BE/</link>
    <pubDate>Sun, 23 Dec 2018 00:04:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%9B%BE/</guid>
    <description><![CDATA[定义 大概长这样 存储 邻接矩阵 邻接矩阵存储是用一个二位数组存储图，如果i和j之间有边，则矩阵的[i][j]位置有值。 劣势是存储存在浪费情况 无向图]]></description>
</item><item>
    <title>算法:堆</title>
    <link>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%A0%86/</link>
    <pubDate>Fri, 21 Dec 2018 14:12:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%A0%86/</guid>
    <description><![CDATA[定义 堆是一个完全二叉树 堆中的每个节点的值都必须大于等于(或小于等于)其子树中每个节点的值 后续讨论默认为大顶堆 关键点 存储 完全二叉树用数组存储最]]></description>
</item><item>
    <title>数据结构:红黑树</title>
    <link>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%BA%A2%E9%BB%91%E6%A0%91/</link>
    <pubDate>Thu, 20 Dec 2018 10:19:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%BA%A2%E9%BB%91%E6%A0%91/</guid>
    <description><![CDATA[定义 意义 红黑树是一种近似平衡的二叉查找树 树各种操作的时间复杂度基本都和树的高度成正比，所以我们期望我们的树能尽量平衡，这样才能让复杂度不退化]]></description>
</item><item>
    <title>数据结构:二叉树</title>
    <link>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
    <pubDate>Tue, 18 Dec 2018 11:32:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
    <description><![CDATA[定义 树 摘自维基百科 树（英语：Tree）是一种无向图（undirected graph），其中任意两个顶点间存在唯一一条路径。或者说，只要没有回]]></description>
</item><item>
    <title>数据结构:散列表</title>
    <link>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%95%A3%E5%88%97%E8%A1%A8/</link>
    <pubDate>Mon, 17 Dec 2018 10:40:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%95%A3%E5%88%97%E8%A1%A8/</guid>
    <description><![CDATA[散列表是什么 散列表是一种O(1)复杂度查找的数据结构，它是如何做到的呢 数组的随机访问为O(1) 把数据的key通过某种方式(hash函数)转化]]></description>
</item><item>
    <title>数据结构:跳表</title>
    <link>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E8%B7%B3%E8%A1%A8/</link>
    <pubDate>Mon, 17 Dec 2018 10:23:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E8%B7%B3%E8%A1%A8/</guid>
    <description><![CDATA[跳表是什么 二分查找的实现依赖数组的随机访问，跳表就是让链表也能实现二分查找。 把单链表的每两个结点提取一个结点到上级，这样查找的时候思路和二分]]></description>
</item><item>
    <title>算法:二分查找</title>
    <link>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
    <pubDate>Sun, 16 Dec 2018 10:40:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
    <description><![CDATA[基本思路 在已经升序排列且无重复数据的数组中，每次查找都取数组的中点值和目标值对比大小，如果目标值偏大，则目标值在中点右侧；如果目标值偏小，则]]></description>
</item><item>
    <title>算法:线性排序</title>
    <link>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E7%BA%BF%E6%80%A7%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Sun, 09 Dec 2018 22:51:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E7%BA%BF%E6%80%A7%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[线性排序即排序时间复杂度为线性O(n)的排序 桶排序 数据要求 能够划分为m个有序的桶，且n个数据能够均匀地分配到m个桶中 基本思路 N个数据均匀地分]]></description>
</item><item>
    <title>算法:快速排序</title>
    <link>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Sun, 09 Dec 2018 11:57:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://qiao1994.github.io/%E7%AE%97%E6%B3%95-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[基本原理 快排的基本思想也是分治，它的基本思路是从数组中选择一个值作为分割点,小于这个分割点的值都放在分割点左侧;递归执行,直到分割点的左侧和]]></description>
</item></channel>
</rss>
